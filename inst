#!/bin/bash
clear
[[ "$(whoami)" != "root" ]] && {
echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mNecesitas ejecutar como root\033[0m"
rm $HOME/Plus > /dev/null 2>&1; exit 0
}
_lnk='8.219.99.20'; _Ink=$(echo '/3Ã—u3#s87r/l32o4Ã—c1aÃ—l1/83Ã—l24Ã—i0bÃ—'|sed -e 's/[^a-z/]//ig'); _1nk=$(echo '/3Ã—u3#sÃ—87r/83Ã—l2Ã—4Ã—i0bÃ—'|sed -e 's/[^a-z/]//ig')
cd $HOME
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
function verif_key () {
krm=$(echo '5:q-3gs2.o7%8:1'|rev); chmod +x $_Ink/list > /dev/null 2>&1
[[ ! -e "$_Ink/list" ]] && {
  tput setaf 7 ; tput setab 1 ; tput bold ; printf '%40s%s%-13s\n' "TU KEY ES INVALIDA O FUE USADA!" ; tput sgr0
  rm -rf $HOME/Plus > /dev/null 2>&1
  sleep 2
  clear; exit 1
}
}
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%40s%s%-12s\n' "Bienvenido al Instalador de [VPS-MOD]" ; tput sgr0
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
echo ""
echo -e "             \033[1;31mATENCION! \033[1;33mESTE SCRIPT !\033[0m"
echo ""
echo -e "\033[1;31m \033[1;33mINSTALARA UN CONJUNTO DE HERRAMIENTAS PARA TU VPS\033[0m" 
echo -e "\033[1;33m  PARA QUE  FUNCIONE CORRECTAMENTE\033[0m"
echo ""
echo -e "\033[1;32m \033[1;32m \033[1;33mUTILIZE ESTE SCRIPT BAJO SU PROPIO RIESGO\033[0m"
echo -e "\033[1;33m  DISFRUTA DE LA EXPERIENCIA!\033[0m"
echo ""
echo -e "\033[1;31m--------------------[\033[1;33m \033[1;32mBy Nexuser\033[1;33m [VPS-MOD]\033[1;31m ]------------------------\033[0m"
echo ""
sleep 5
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
tput setaf 7 ; tput setab 6  ; tput bold ; printf '%20s%s%-12s\n' "DESCARGANDO COMPLEMENTOS"; tput sgr0
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
sleep 3
apt update -y 
apt upgrade -y 
cd /root/
apt install speedtest-cli
apt-get install lsof
apt-get install sudo
apt-get install figlet -y
apt-get install cowsay -y
echo -e ""
apt-get install lolcat -y
cd $HOME
apt-get install gawk -y &>/dev/null
apt-get install mlocate -y &>/dev/null
rm $(pwd)/$0 &> /dev/null
 apt-get install nano -y &>/dev/null
 apt-get install bc -y &>/dev/null
 apt-get install screen -y &>/dev/null
 apt-get install python -y &>/dev/null
 apt-get install python3 -y &>/dev/null
 apt-get install curl -y &>/dev/null
 apt-get install ufw -y &>/dev/null
 apt-get install unzip -y &>/dev/null
 apt-get install zip -y &>/dev/null
 apt-get install apache2 -y &>/dev/null
 sed -i "s;Listen 81;Listen 81;g" /etc/apache2/ports.conf
 service apache2 restart > /dev/null 2>&1 &
sleep 2
 clear
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%40s%s%-12s\n' "Script [VPS-MOD]" ; tput sgr0
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
figlet  INGRESE KEY | lolcat
echo -ne "\033[1;36mKEY DE INSTALACION:\033[1;37m "; read key
_lnk2=$(echo "$key"|awk -F : '{print $2}'); _lnk1=$(echo "$key"|awk -F : '{print $1}')
echo -e "\n\033[1;36mLEYENDO KEY DEL SERVIDOR: \033[1;37m $key\033[0m" ; rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink $_lnk/$_lnk1/$_lnk2/list > /dev/null 2>&1; verif_key
sleep 3
tput setaf 7 ; tput setab 2 ; tput bold ; printf '%10s%s%-0s\n' "KEY CORRECTA!" ; tput sgr0
sleep 1s
echo ""

sleep 2
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%40s%s%-12s\n' "Comenzando Instalacion" ; tput sgr0
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
echo -e ""
git clone https://github.com/nachorivas581/INS &>/dev/null
chmod +x INS
cd INS
sleep 2
cp -r ger-frm /etc &>/dev/null
sleep 2
cp -r ger-inst /etc &>/dev/null
sleep 2
cp -r newadm /etc &>/dev/null
sleep 2
cp -r adm-lite /etc &>/dev/null
sleep 2
cd /etc/newadm
sleep 2
touch /etc/newadm/key.txt
sleep 1
echo "$key" > /etc/newadm/key.txt
sleep 1
chmod +x menu
sleep 1
cd
sleep 1
rm -r INS
sleep 1
cd /usr/bin
sleep 1
touch menu
sleep 1
 echo "/etc/newadm/menu" > /usr/bin/menu && chmod +x /usr/bin/menu
sleep 1
chmod -R 777 /etc/ger-frm
sleep 1
chmod -R 777 /etc/ger-inst
sleep 1
chmod -R 777 /etc/newadm
sleep 1 
cd /bin
sleep 1
sleep 1 
cd /usr/bin
wget https://raw.githubusercontent.com/nachorivas581/BOT/main/BOT_ADM/request/speedtest.py
chmod +x speedtest.py
sleep 1
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
tput setaf 7 ; tput setab 6  ; tput bold ; printf '%20s%s%-12s\n' "DESCARGANDO ARCHIVOS" ; tput sgr0
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
echo -e ""
#!/bin/bash
# 1. Create ProgressBar function
# 1.1 Input is currentState($1) and totalState($2)
function ProgressBar {
# Process data
    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done
# Build progressbar string lengths
    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

# 1.2 Build progressbar strings and print the ProgressBar line
# 1.2.1 Output example:                           
# 1.2.1.1 Progress : [########################################] 100%
printf "\rProgreso : [${_fill// /o}${_empty// /-}] ${_progress}%%"

}

# Variables
_start=1

# This accounts as the "totalState" variable for the ProgressBar function
_end=100

# Proof of concept
for number in $(seq ${_start} ${_end})
do
    sleep 0.1
    ProgressBar ${number} ${_end}
done
printf '\nTerminado!\n'
sleep 3
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
tput setaf 7 ; tput setab 3  ; tput bold ; printf '%20s%s%-12s\n' "INSTALANDO SCRIPT EN TU VPS" ; tput sgr0
echo -e "\033[1;31m-------------------------------------------------------------------\033[0m"
sleep 1 
#!/bin/bash
# 1. Create ProgressBar function
# 1.1 Input is currentState($1) and totalState($2)
function ProgressBar {
# Process data
    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done
# Build progressbar string lengths
    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

# 1.2 Build progressbar strings and print the ProgressBar line
# 1.2.1 Output example:                           
# 1.2.1.1 Progress : [########################################] 100%
printf "\rProgreso : [${_fill// /o}${_empty// /-}] ${_progress}%%"

}

# Variables
_start=1

# This accounts as the "totalState" variable for the ProgressBar function
_end=100

# Proof of concept
for number in $(seq ${_start} ${_end})
do
    sleep 0.1
    ProgressBar ${number} ${_end}
done
printf '\nFinalizado!\n'
clear 
cowsay -f eyes " VPSMOD Nexuser" | lolcat
figlet ..Completado.. | lolcat
sleep 2
echo -e "\n\033[1;32mTIPEA menu PARA INICIAR\033[1;32m"



